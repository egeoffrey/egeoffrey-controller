calculate:
  avg_min_max:
    description: Every hour average, minimum and maximum values are automatically calculated from the collected measures; every day average, minimum and maximum are calculated from the hourly averages
    operations:
    - avg
    - min_max
  sum:
    description: For every hour and day the sum of the measures from each timeframe is automatically calculated
    operations:
    - avg
    - sum
poll_at_startup: true
post_processors:
  celsius->fahrenheit: echo 'print %value% * 1.8 + 32' | python
  fahrenheit->celsius: echo 'print %value% - 32 * 0.56' | python
  hg->mb: echo 'print %value% * 33.86' | python
  inch->mm: echo 'print %value% * 25.4' | python
  km->mile: echo 'print %value% / 1.609' | python
  mb->hg: echo 'print %value% /33.86' | python
  meter->km: echo 'print %value% / 1000' | python
  mile->km: echo 'print %value% * 1.609' | python
  mm->inch: echo 'print %value% / 25.4' | python
retain:
  history:
    description: Retain values for 5 days, hourly averages for 5 days and daily averages forever. Recommended for timeseries data
    policies:
      hourly: 5
      raw: 5
      daily: 0
  single_value:
    description: Retain the latest value only. Recommended for actuators, status indicators, etc.
    policies:
      raw: 0
      count: 1
  short_history:
    description: Retain daily values for the last 5 days, ignore values older than the latest
    policies:
      daily: 5
      new_only: true
